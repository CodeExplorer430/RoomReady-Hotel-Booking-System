/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.java.roomready.admin.gui;

import main.java.roomready.authentication.Admin;
import main.java.roomready.authentication.AdminAuthenticationManager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Image;
import javax.swing.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.UIManager;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.io.File;

/**
 *
 * @author Miguel
 */
public class AdminRegistration extends javax.swing.JFrame {
    private AdminAuthenticationManager authManager;
    private Timer timer;
    private ImageIcon defaultImageIcon;
    private ImageIcon selectedImageIcon;
    private String selectedImagePath;
    private String adminFullName = "";
            
    /**
     * Creates new form Registration
     */
    public AdminRegistration(AdminAuthenticationManager authManager) {
        initComponents();
        initTimer();
        this.authManager = authManager;
        selectedImageIcon = null; // Initially, no image is selected
        setupEnterKeyHandling();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        showConfirmPasswordCheckBox = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        pictureLabel1 = new javax.swing.JLabel();
        insertPictureButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        contactInfoField = new javax.swing.JTextField();
        fullNameField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        dateTimeLabel1 = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        otherRadioButton = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        femaleRadioButton = new javax.swing.JRadioButton();
        roleComboBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customer Registration");
        setLocation(new java.awt.Point(150, 150));
        setModalExclusionType(null);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(154, 51, 35));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADMIN REGISTRATION");

        passwordField.setBackground(new java.awt.Color(255, 255, 255));
        passwordField.setForeground(new java.awt.Color(0, 0, 0));
        passwordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Password:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Username:");

        confirmPasswordField.setBackground(new java.awt.Color(255, 255, 255));
        confirmPasswordField.setForeground(new java.awt.Color(0, 0, 0));
        confirmPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        confirmPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Confirm Password:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Full Name:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Email Address:");

        showConfirmPasswordCheckBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        showConfirmPasswordCheckBox.setForeground(new java.awt.Color(51, 51, 51));
        showConfirmPasswordCheckBox.setText("Show Password");
        showConfirmPasswordCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showConfirmPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showConfirmPasswordCheckBoxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Contact Information:");

        pictureLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/resources/images/icons8-user-100.png"))); // NOI18N

        insertPictureButton.setBackground(new java.awt.Color(102, 102, 102));
        insertPictureButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        insertPictureButton.setForeground(new java.awt.Color(255, 255, 255));
        insertPictureButton.setText("Insert Photo");
        insertPictureButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insertPictureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPictureButtonActionPerformed(evt);
            }
        });

        registerButton.setBackground(new java.awt.Color(51, 51, 51));
        registerButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("REGISTER");
        registerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Role/Position:");

        usernameField.setBackground(new java.awt.Color(255, 255, 255));
        usernameField.setForeground(new java.awt.Color(0, 0, 0));
        usernameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        contactInfoField.setBackground(new java.awt.Color(255, 255, 255));
        contactInfoField.setForeground(new java.awt.Color(0, 0, 0));
        contactInfoField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        contactInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactInfoFieldActionPerformed(evt);
            }
        });

        fullNameField.setBackground(new java.awt.Color(255, 255, 255));
        fullNameField.setForeground(new java.awt.Color(0, 0, 0));
        fullNameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fullNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameFieldActionPerformed(evt);
            }
        });

        emailField.setBackground(new java.awt.Color(255, 255, 255));
        emailField.setForeground(new java.awt.Color(0, 0, 0));
        emailField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(51, 51, 51));
        backButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("BACK TO DASHBOARD"); // NOI18N
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dateTimeLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        dateTimeLabel1.setForeground(new java.awt.Color(51, 51, 51));
        dateTimeLabel1.setText("4/21/2024 | 10:52 PM");

        genderButtonGroup.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        maleRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        maleRadioButton.setText("Male");

        genderButtonGroup.add(otherRadioButton);
        otherRadioButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        otherRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        otherRadioButton.setText("Other");
        otherRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherRadioButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Please select your gender:");
        jLabel11.setPreferredSize(new java.awt.Dimension(25, 15));

        genderButtonGroup.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        femaleRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        femaleRadioButton.setText("Female");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        roleComboBox.setBackground(new java.awt.Color(255, 255, 255));
        roleComboBox.setForeground(new java.awt.Color(0, 0, 0));
        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hotel Administrator", "Receptionist" }));
        roleComboBox.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(dateTimeLabel1)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(passwordField))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(showConfirmPasswordCheckBox, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(maleRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(otherRadioButton))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(backButton))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(contactInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fullNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roleComboBox, 0, 220, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pictureLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insertPictureButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(dateTimeLabel1))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pictureLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertPictureButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showConfirmPasswordCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fullNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registerButton)
                    .addComponent(backButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maleRadioButton)
                        .addComponent(femaleRadioButton)
                        .addComponent(otherRadioButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/resources/images/WOW Hotel logo.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initTimer() {
        // Create a Timer with 1-second delay (1000 milliseconds)
        timer = new Timer (0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                // Update the label with the current date and time
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd | HH:mm:ss");
                String currentTime = dateFormat.format(new java.util.Date());
                dateTimeLabel1.setText(currentTime);
            }
        });
        // Start the timer
        timer.start();
    }
    
    private void setupEnterKeyHandling(){
        // Add action listener to the username field
        usernameField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                passwordField.requestFocusInWindow(); // Move focus to password field
            }
        });
        
        // Add action listener to the password field
        passwordField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                confirmPasswordField.requestFocusInWindow(); // Move focus to confirm password field
            }
        });
        
        // Add action listener to the confirm password field
        confirmPasswordField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                fullNameField.requestFocusInWindow(); // Move focus to full name field
            }
        });
        
        // Add action listener to the full name field
        fullNameField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                emailField.requestFocusInWindow(); // Move focus to email field
            }
        });
        
        // Add action listener to the email field
        emailField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                contactInfoField.requestFocusInWindow(); // Move focus to contact information field
            }
        });
        
        // Add action listener to the contact information field
        contactInfoField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                roleComboBox.requestFocusInWindow(); // Move focus to date of birth date chooser
            }
        });
    }
    
    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void confirmPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmPasswordFieldActionPerformed

    private void showConfirmPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showConfirmPasswordCheckBoxActionPerformed
        // Toggle password visibility based on checkbox state
        if (showConfirmPasswordCheckBox.isSelected()){
            passwordField.setEchoChar((char)0); // Show password in plain text
            confirmPasswordField.setEchoChar((char)0);
        } else {
            passwordField.setEchoChar('•'); // Show password as masked characters
            confirmPasswordField.setEchoChar('•');
        }
    }//GEN-LAST:event_showConfirmPasswordCheckBoxActionPerformed

    private void insertPictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPictureButtonActionPerformed
        try {
            // Get the class name and current look and feel
            String currentLookAndFeelClassName = UIManager.getLookAndFeel().getClass().getName();
            
            // Set the look and feel to the system look and feel for JFileChooser only
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        
            // Create and configure the file chooser
            JFileChooser fileChooser = new JFileChooser();
            // Limit file chooser to image files only
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif");
            fileChooser.setFileFilter(filter);
            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION){
                File file = fileChooser.getSelectedFile();
                selectedImagePath = file.getAbsolutePath(); // Store the selected image path
                
                // Create ImageIcon
                selectedImageIcon = new ImageIcon(selectedImagePath);
                // Set the selected image icon to the label
                pictureLabel1.setIcon(selectedImageIcon);
            
                // Adjust the size of the image to fit within the label
                Image image = selectedImageIcon.getImage();
                Image scaledImage = image.getScaledInstance(pictureLabel1.getWidth(), pictureLabel1.getHeight(), Image.SCALE_SMOOTH);
                selectedImageIcon.setImage(scaledImage);
            }
            
            // Revert back to the default look and feel
            UIManager.setLookAndFeel(currentLookAndFeelClassName);
            
        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_insertPictureButtonActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void contactInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactInfoFieldActionPerformed

    private void fullNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameFieldActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Close the current registration form
        this.dispose();
       
        // Show the existing instance of the login form
        AdminPanel adminPanel = new AdminPanel(adminFullName);
        adminPanel.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        String confirmPassword = new String(confirmPasswordField.getPassword());
        String fullName = fullNameField.getText();
        String gender = null;
        if (maleRadioButton.isSelected()){
            gender = "Male";
        } else if (femaleRadioButton.isSelected()){
            gender = "Female";
        } else if (otherRadioButton.isSelected()){
            gender = "Other";
        }
        String email = emailField.getText();
        String contactInfo = contactInfoField.getText();
        String role = (String) roleComboBox.getSelectedItem();
        
        
        // Perform validation (e.g., check for empty fields)
        if (username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty() || fullName.isEmpty() || email.isEmpty() || contactInfo.isEmpty()){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all fields.");
            return;
        }
        
        // Check if username already exists
        if (authManager.isUserRegistered(username)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Username already exists. Please choose another one.");
            return;
        }
        
        // Validate password format
        if (!authManager.isValidPassword(password)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long and contain letters, numbers and special characters.");
            return;
        }
        
        // Check if password match
        if (!password.equals(confirmPassword)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Passwords do not match.");
            return;
        }
        
         // Validate the full name format
        if (!authManager.isValidFullName(fullName)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid full name.");
            return;
        }
        
        // Check if a sex option is selected
        if(!maleRadioButton.isSelected() && !femaleRadioButton.isSelected() && !otherRadioButton.isSelected()){
            // Show error message for unselected gender
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a gender option.");
            return;
        }
        
         // Validate email address format
        if (!authManager.isValidEmail(email)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid email address.");
            return;
        }
        
        // Validate contact information format
        if (!authManager.isValidContactInfo(contactInfo)){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid contact information.");
        }
      
        // Check if a role is selected
        if (role == null || role.isEmpty()){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a role.");
            return;
        }
              
         // Check if user has inserted a picture
        if (selectedImagePath == null || selectedImagePath.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(this, "Please insert a picture.");
            return;
        }
        
        // Create user object with the selected image path
        Admin user = new Admin(username, password, fullName, gender, email, contactInfo, role, selectedImagePath);
        
        // Set additional fields
        user.setFullName(fullName);
        user.setGender(gender);
        user.setEmail(email);
        user.setContactInfo(contactInfo);
        user.setRole(role);
        
        LocalDateTime registrationTimestamp = LocalDateTime.now();
        // Register user
        authManager.registerAdmin(user, registrationTimestamp);
        
        // Show success message
        javax.swing.JOptionPane.showMessageDialog(this, "Registration successful!");
        
        // Clear the form fields and date chooser
        usernameField.setText("");
        passwordField.setText("");
        confirmPasswordField.setText("");
        fullNameField.setText("");
        genderButtonGroup.clearSelection();
        emailField.setText("");
        contactInfoField.setText("");
        roleComboBox.setSelectedIndex(-1);
        pictureLabel1.setIcon(defaultImageIcon);
        
        // Close the registration form
        this.dispose();
        
        // Return to the login form
        AdminPanel adminPanel = new AdminPanel(adminFullName);
        adminPanel.setVisible(true);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void otherRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherRadioButtonActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminRegistration(new AdminAuthenticationManager()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JTextField contactInfoField;
    private javax.swing.JLabel dateTimeLabel1;
    private javax.swing.JTextField emailField;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField fullNameField;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JButton insertPictureButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JRadioButton otherRadioButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel pictureLabel1;
    private javax.swing.JButton registerButton;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JCheckBox showConfirmPasswordCheckBox;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
