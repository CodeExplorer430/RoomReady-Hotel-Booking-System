package main.java.roomready.admin.gui;


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author philipmathewbobis
 */
public class UserManagement extends javax.swing.JFrame {

    /**
     * Creates new form UserManagement
     */
    public UserManagement() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewAllAccounts = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("(Wow Hotel) User Management ");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(218, 215, 205));

        jPanel2.setBackground(new java.awt.Color(218, 215, 205));

        deleteButton.setText("Delete Account");
        deleteButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("User Management");

        viewAllAccounts.setText("View All Accounts");
        viewAllAccounts.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewAllAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllAccountsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewAllAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewAllAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        userTable.setBackground(new java.awt.Color(218, 215, 205));
        userTable.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account no.", "Account Name", "Gender", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        userTable.setRowHeight(30);
        userTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/resources/images/wow.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean buttonClicked = false;
    private void viewAllAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllAccountsActionPerformed
        if (!buttonClicked){
            final String filePath = "src\\main\\java\\resources\\data\\User Accounts.txt";
            final String DELIMITER = "|";
            
            try(BufferedReader reader = new BufferedReader(new FileReader(filePath))){
                String header = reader.readLine(); // read and discard header
                String line;
                DefaultTableModel model = (DefaultTableModel) userTable.getModel();
                
                while ((line = reader.readLine()) != null){
                    String[] data = line.split("\\|");
                    
                    if (data.length >= 4){
                        String accountName = data[1];
                        String gender = data[2];
                        int accountNo = 0;
                        int age = 0;
                        if (data[0].matches("\\d+") && data[3].matches("\\d+")){
                            accountNo = Integer.parseInt(data[0]);
                            age = Integer.parseInt(data[3]);
                        }
                        
                        model.addRow(new Object[]{accountNo,accountName,gender,age});
                    }else {
                        JOptionPane.showMessageDialog(null, "Invalid data line", "Invalid", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }catch (IOException e){
                e.printStackTrace();
            }
            buttonClicked = true; // update the clickedButton to stop rewriting the data
        } else {
               JOptionPane.showMessageDialog(null, "You've already added the data. Clicking again will have no effect.","Already added", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_viewAllAccountsActionPerformed

    private void userTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userTablePropertyChange
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(DefaultTableCellRenderer.LEFT);
        
        // Set the default cell renderer for all columns
        userTable.setDefaultRenderer(Object.class, dtcr);
        
       
    }//GEN-LAST:event_userTablePropertyChange
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String filePath = "src/main/java/resources/User Accounts.txt";
        String tempFilePath = filePath + ".tmp";
        boolean foundAccount = false;
        
        String input1 = JOptionPane.showInputDialog(null,"Enter account no: ","Delete Account", JOptionPane.QUESTION_MESSAGE);
        // String input2 = JOptionPane.showInputDialog(null,"Enter account name: ","Delete Account", JOptionPane.QUESTION_MESSAGE);
        
        if (input1 == null || input1.isEmpty()){
            // Show an error message and return from the method
            JOptionPane.showMessageDialog(null, "Account number is empty or not provided.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int accountNo = Integer.parseInt(input1);
        // String accountName = input2;
        // Use try-with-resoures to automatically close the resources
        try(BufferedReader reader = new BufferedReader(new FileReader(filePath));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFilePath))){
            String header = reader.readLine(); // read and preserve header
            String[] headerParts = header.split("\\|");
            writer.write(String.join("|", headerParts));
            writer.newLine();
            String currentLine;
            
            while((currentLine = reader.readLine()) != null) {
                String[] parts = currentLine.split("\\|");
                if(parts[0].matches("\\d+")){ // Validating if the key is valid before parsing
                    int accountNumber = Integer.parseInt(parts[0]);
                    if (accountNumber == accountNo){
                        foundAccount = true;
                    } else {
                        writer.write(String.join("|", parts)); // Write the lines to the temporary file that are not meant to be deleted
                        writer.newLine(); // creaate new line
                    }
                }
            }
        } catch (IOException e){
            e.printStackTrace();
        }
        // Transferring the udpated content back to the original file
        try(BufferedReader reader = new BufferedReader(new FileReader(tempFilePath));
            BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))){
            String header = reader.readLine(); // read and preserve header
            String[] headerParts = header.split("\\|");
            writer.write(String.join("|",headerParts));
            writer.newLine();
            String currentLine;
            
            while ((currentLine = reader.readLine()) != null){
                String[] data = currentLine.split("\\|"); // Split the line by | seperator
                writer.write(String.join("|", data)); //  Write the data array in one string with a seperator each index
                writer.newLine();
            }
        } catch (IOException e){
            e.printStackTrace();
        }
        
        if (!foundAccount) {
            JOptionPane.showMessageDialog(null, "Account with account number " + accountNo + " not found." ,"Account not found", JOptionPane.WARNING_MESSAGE);
            return; // Stop further execution
        }
        
        // Delete the temporary file after transferring the updated content to the original file
        File tempFile = new File(tempFilePath);
        
        if(!tempFile.delete()){
            JOptionPane.showMessageDialog(null, "Could not delete the temporary file","FAILED", JOptionPane.ERROR_MESSAGE);
        }else {
            JOptionPane.showMessageDialog(null, "Successfully Deleted","Success", JOptionPane.PLAIN_MESSAGE);
        }
        
        // Cear existing rows from the table model
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        model.setRowCount(0);
         
        // Reload updated data and add it to the table model
        loadDataFromFile();
    }//GEN-LAST:event_deleteButtonActionPerformed

    
    private void loadDataFromFile(){
        final String filePath = "C:\\Users\\philipmathewbobis\\OneDrive\\Desktop\\Database for Booking System\\User Accounts.txt";
            final String DELIMITER = "|";
            
            try(BufferedReader reader = new BufferedReader(new FileReader(filePath))){
                String header = reader.readLine(); // read and discard header
                String line;
                DefaultTableModel model = (DefaultTableModel) userTable.getModel();
                
                while ((line = reader.readLine()) != null){
                    String[] data = line.split("\\|");
                    
                    if (data.length >= 4){
                        String accountName = data[1];
                        String gender = data[2];
                        int accountNo = 0;
                        int age = 0;
                        if (data[0].matches("\\d+") && data[3].matches("\\d+")){
                            accountNo = Integer.parseInt(data[0]);
                            age = Integer.parseInt(data[3]);
                        }
                        
                        model.addRow(new Object[]{accountNo,accountName,gender,age});
                    }else {
                        JOptionPane.showMessageDialog(null, "Invalid data line", "Invalid", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }catch (IOException e){
                e.printStackTrace();
            }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    private javax.swing.JButton viewAllAccounts;
    // End of variables declaration//GEN-END:variables
}
