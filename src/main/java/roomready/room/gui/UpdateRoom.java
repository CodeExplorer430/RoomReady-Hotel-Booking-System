/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main.java.roomready.room.gui;

import main.java.roomready.room.Room;
import main.java.roomready.room.RoomManager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Image;
import javax.swing.Timer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.UIManager;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.io.File;

/**
 *
 * @author Miguel
 */
public class UpdateRoom extends javax.swing.JFrame {
    private static RoomManager roomManager;
    private static Room room;
    private static RoomManagement roomManagement;
    private Timer timer;
    private ImageIcon defaultImageIcon;
    private ImageIcon selectedImageIcon;
    private String selectedImagePath;
    private String adminFullName = "";
            
    /**
     * Creates new form Registration
     */
    public UpdateRoom(RoomManager roomManager, Room room, RoomManagement roomManagement) {
        initComponents();
        initTimer();
        this.roomManager = roomManager;
        this.room = room;
        this.roomManagement = roomManagement;
        selectedImageIcon = null; // Initially, no image is selected
        setupEnterKeyHandling();
        populateFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roomImageLabel = new javax.swing.JLabel();
        insertPictureButton = new javax.swing.JButton();
        updateRoomButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        roomNoField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        dateTimeLabel1 = new javax.swing.JLabel();
        roomTypeComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        roomFloorComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        roomCapacityComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        roomIdField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Room");
        setAutoRequestFocus(false);
        setLocation(new java.awt.Point(150, 150));
        setModalExclusionType(null);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(154, 51, 35));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("UPDATE ROOM");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Room No.:");

        roomImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roomImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/resources/images/room-door.png"))); // NOI18N
        roomImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        insertPictureButton.setBackground(new java.awt.Color(102, 102, 102));
        insertPictureButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        insertPictureButton.setForeground(new java.awt.Color(255, 255, 255));
        insertPictureButton.setText("Insert Photo");
        insertPictureButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insertPictureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPictureButtonActionPerformed(evt);
            }
        });

        updateRoomButton.setBackground(new java.awt.Color(51, 51, 51));
        updateRoomButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateRoomButton.setForeground(new java.awt.Color(255, 255, 255));
        updateRoomButton.setText("UPDATE");
        updateRoomButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRoomButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Room Type:");

        roomNoField.setBackground(new java.awt.Color(255, 255, 255));
        roomNoField.setForeground(new java.awt.Color(0, 0, 0));
        roomNoField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        roomNoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoFieldActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(51, 51, 51));
        backButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("BACK TO DASHBOARD"); // NOI18N
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dateTimeLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        dateTimeLabel1.setForeground(new java.awt.Color(51, 51, 51));
        dateTimeLabel1.setText("4/21/2024 | 10:52 PM");

        roomTypeComboBox.setBackground(new java.awt.Color(204, 204, 204));
        roomTypeComboBox.setForeground(new java.awt.Color(0, 0, 0));
        roomTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deluxe 1 / Deluxe Double", "Deluxe 2 / Deluxe Twin", "Superior", "Business Class / Studio Suite" }));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Room Capacity:");

        roomFloorComboBox.setBackground(new java.awt.Color(204, 204, 204));
        roomFloorComboBox.setForeground(new java.awt.Color(0, 0, 0));
        roomFloorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3rd Floor", "4th Floor", "5th Floor", "6th Floor", "7th Floor", "8th Floor", "9th Floor", "10th Floor" }));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Room Floor:");

        roomCapacityComboBox.setBackground(new java.awt.Color(204, 204, 204));
        roomCapacityComboBox.setForeground(new java.awt.Color(0, 0, 0));
        roomCapacityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Guest", "2 Guests", "3 Guests", " " }));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Room ID:");

        roomIdField.setBackground(new java.awt.Color(255, 255, 255));
        roomIdField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        roomIdField.setForeground(new java.awt.Color(0, 0, 0));
        roomIdField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        roomIdField.setEnabled(false);
        roomIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(roomNoField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(roomTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomCapacityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomFloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(roomIdField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(insertPictureButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roomImageLabel))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(updateRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(backButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateTimeLabel1)))
                        .addGap(0, 15, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dateTimeLabel1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(roomImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertPictureButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomCapacityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomFloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateRoomButton)
                    .addComponent(backButton))
                .addGap(17, 17, 17))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/java/resources/images/WOW Hotel logo.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isClosed(){
        return !this.isVisible();
    } 
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Close the current form
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed
    
    private void populateFields(){
        roomIdField.setText(room.getRoomId());
        roomNoField.setText(String.valueOf(room.getRoomNo()));
        roomTypeComboBox.setSelectedItem(room.getRoomType());
        roomCapacityComboBox.setSelectedItem(room.getCapacity());
        roomFloorComboBox.setSelectedItem(room.getFloor());
        selectedImagePath = room.getRoomImage();
        updateRoomImageLabel();
    }
   
     private void updateRoomImageLabel(){
         if(selectedImagePath != null && !selectedImagePath.isEmpty()){
             ImageIcon imageIcon = new ImageIcon(selectedImagePath);
             Image image = imageIcon.getImage().getScaledInstance(roomImageLabel.getWidth(), roomImageLabel.getHeight(), Image.SCALE_SMOOTH);
             roomImageLabel.setIcon(new ImageIcon(image));
         }
    }

  
    private void updateRoom(){
        String roomNoStr = roomNoField.getText().trim();
        String roomType = (String) roomTypeComboBox.getSelectedItem();
        String capacity = (String) roomCapacityComboBox.getSelectedItem();
        String floor = (String) roomFloorComboBox.getSelectedItem();
        
        // Check for empty fields
        if (roomNoStr.isEmpty() || roomType.isEmpty() || capacity.isEmpty() || floor.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill in all fields.");
            return;
        }
        
        // Check if a room type is selected
        if (roomType == null || roomType.isEmpty()){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a room type.");
            return;
        }
        
         // Check if a room capacity is selected
        if (capacity == null || capacity.isEmpty()){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a room capacity.");
            return;
        }
        
         // Check if a room floor is selected
        if (floor == null || floor.isEmpty()){
            // Show error message
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a floor.");
            return;
        }
        
         // Check if user has inserted a room image
        if (selectedImagePath == null || selectedImagePath.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(this, "Please insert a picture.");
            return;
        }
        
        try{
            int roomNo = Integer.parseInt(roomNoStr);
            
            room.setRoomNo(roomNo);
            room.setRoomType(roomType);
            room.setCapacity(capacity);
            room.setFloor(floor);
            room.setRoomImage(selectedImagePath);
            
            roomManager.updateRoom(room);
                 
            JOptionPane.showMessageDialog(this, "Room updated successfully!");
            
            // Ensure roomManagement is not null
            if (roomManagement != null){
                // Notify RoomManagement to refresh the table
                roomManagement.refreshRoomTable();
            } else {
                JOptionPane.showMessageDialog(this, "Room management is not initialized.");
            }
            
            // Clear the fields in the Update Room form
            clearForm();
            
             // Close the update room form
             this.dispose();
        
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    
    private void clearForm(){
        roomNoField.setText("");
        roomTypeComboBox.setSelectedIndex(-1);
        roomCapacityComboBox.setSelectedIndex(-1);
        roomFloorComboBox.setSelectedIndex(-1);
        roomImageLabel.setIcon(defaultImageIcon);
    }
    
    private void updateRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRoomButtonActionPerformed
        // Call the method for updating rooms
        updateRoom();
    }//GEN-LAST:event_updateRoomButtonActionPerformed

    private void insertPictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPictureButtonActionPerformed
        try {
            // Get the class name and current look and feel
            String currentLookAndFeelClassName = UIManager.getLookAndFeel().getClass().getName();

            // Set the look and feel to the system look and feel for JFileChooser only
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            // Create and configure the file chooser
            JFileChooser fileChooser = new JFileChooser();
            // Limit file chooser to image files only
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif");
            fileChooser.setFileFilter(filter);
            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION){
                File file = fileChooser.getSelectedFile();
                selectedImagePath = file.getAbsolutePath(); // Store the selected image path

                // Create ImageIcon
                selectedImageIcon = new ImageIcon(selectedImagePath);
                // Set the selected image icon to the label
                roomImageLabel.setIcon(selectedImageIcon);

                // Adjust the size of the image to fit within the label
                Image image = selectedImageIcon.getImage();
                Image scaledImage = image.getScaledInstance(roomImageLabel.getWidth(), roomImageLabel.getHeight(), Image.SCALE_SMOOTH);
                selectedImageIcon.setImage(scaledImage);
            }

            // Revert back to the default look and feel
            UIManager.setLookAndFeel(currentLookAndFeelClassName);

        } catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_insertPictureButtonActionPerformed

    private void roomNoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoFieldActionPerformed

    private void roomIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomIdFieldActionPerformed

    private void initTimer() {
        // Create a Timer with 1-second delay (1000 milliseconds)
        timer = new Timer (0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                // Update the label with the current date and time
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd | HH:mm:ss");
                String currentTime = dateFormat.format(new java.util.Date());
                dateTimeLabel1.setText(currentTime);
            }
        });
        // Start the timer
        timer.start();
    }
    
    private void setupEnterKeyHandling(){
        // Add action listener to the room ID field
        roomNoField.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                roomTypeComboBox.requestFocusInWindow(); // Move focus to room type combobox
            }
        });
        
        // Add action listener to the room type combobox
        roomTypeComboBox.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                roomCapacityComboBox.requestFocusInWindow(); // Move focus to room capacity combobox
            }
        });
        
        // Add action listener to the capacity field
        roomCapacityComboBox.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                roomFloorComboBox.requestFocusInWindow(); // Move focus to room floor combobox
            }
        });
        
        // Add action listener to the room floor combobox
        roomFloorComboBox.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                updateRoomButton.doClick(); // Move focus to submit button
            }
        });
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             // Ensure that roomManager and room are properly initialized
            if (roomManager != null && room != null && roomManagement != null) {
                // Create the UpdateRoom frame with the initialized roomManager,room and roomManagement objects
                UpdateRoom updateRoom = new UpdateRoom(roomManager, room, roomManagement);
                // Make the frame visible
                updateRoom.setVisible(true);
            } else {
                // Handle the case where roomManager or room is null
                JOptionPane.showMessageDialog(null, "Error: Room data is not properly initialized.");
            }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel dateTimeLabel1;
    private javax.swing.JButton insertPictureButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> roomCapacityComboBox;
    private javax.swing.JComboBox<String> roomFloorComboBox;
    private javax.swing.JTextField roomIdField;
    private javax.swing.JLabel roomImageLabel;
    private javax.swing.JTextField roomNoField;
    private javax.swing.JComboBox<String> roomTypeComboBox;
    private javax.swing.JButton updateRoomButton;
    // End of variables declaration//GEN-END:variables
}
